* O que é Lisp?

Lisp é uma família de linguagens de programação de computadores com
uma longa história e tradição. O primeiro Lisp denotado historicamente
por [[https://pt.wikipedia.org/wiki/Lisp][LISP]] foi criado por [[https://pt.wikipedia.org/wiki/John_McCarthy][John McCarthy]], em 1958, nos laboratórios de
inteligência artificial do MIT, USA., Lisp é a segunda linguagem de
programação de alto nível mais antiga ainda em uso atualmente, advinda
antes mesmo da própria Internet (somente Fortran é mais antiga). Desde
sua origem, Lisp se tornou rapidamente a linguagem favorita para
Inteligência Artificial.

Dialetos Lisp [fn:1] têm uma sintaxe singular simplificada para
denotar, listas e símbolos, que podem ou não estarem associados a
valores e/ou a procedimentos. Na linguagens da família Lisp, há a
peculiaridade de existir uma linha muito tênue de separação entre
dados e procedimentos no código-fonte. Na realidade, é possível
produzir código a partir de dados e vice-versa! Uma das
características fortes da linguagem é o uso da [[https://pt.wikipedia.org/wiki/Nota%C3%A7%C3%A3o_polonesa][notação polonesa]] que
simplifica a sintaxe da linguagem, de forma a previnir ambiguidades:
operações e operandos são denotados de forma explícita, em sua ordem
de precedência, no uso de listas.

#+BEGIN_SRC lisp

(operação operando-1 operando-2)
(+ 1 2) ;; => 3

#+END_SRC

Esta família de linguagens foi desenhada para abstrair a complexidade
do hardware de um computador, criando uma interface para que um humano
possa se comunicar de maneira expressiva com a máquina. Influenciada
pela linguagem de computação teórica Lambda Calculus de Alonzo Church,
atualmente os dialetos de Lisp de uso geral mais utilizados e
conhecidos são Common Lisp, Scheme e Clojure.

[fn:1] Lisp é uma abreviação de **LISt Processing**, processamento de listas.

* O que é Common Lisp?

Common Lisp é uma linguagem multi-paradigma pertencente a família de
linguagems de programação Lisp. Suporta os paradigmas de programação
funcional, procedural e orientado a objetos.

No início dos anos 80, existiam dezenas de implementações Lisp
incompatíveis, com cerca de meia dúzia de dialetos principais. Um
projeto foi iniciado, liderado por Scott Fahlman, Daniel Weinreb,
David Moon, Guy Steele e Richard Gabriel, para definir um Lisp comum
que combinaria as melhores características dos dialetos existentes em
um todo coerente.

A primeira edição do padrão Common Lisp apareceu em 1984; um padrão
revisado apareceu em 1990. O padrão ANSI Common Lisp foi lançado em
1994 e revisado em 2004. Common Lisp tornou-se rapidamente o Lisp
escolhido em ambientes acadêmicos e industriais. Os outros dialetos
praticamente desapareceram, com exceção do Scheme, que continua a
desfrutar de uma popularidade modesta para aplicações educacionais.

Muitas das idéias mais importantes nos sistemas de programação
surgiram em conexão com Lisp. Estas incluem a combinação de funções
interpretadas e compiladas, coleta de lixo, chamadas de função
recursiva, rastreamento e depuração no nível de
código-fonte. Atualmente, Lisp é uma linguagem líder para pesquisa
sofisticada sobre estilos de programação funcional, paralelo e
orientada a objetos. Além de ser também uma grande referência para
Computação Quântica, assim como tem sido usado comercialmente em
softwares como [[http://www.schloerconsulting.com/quantum-computer-q-lisp-programming-language][QLisp Project]].

#+BEGIN_SRC lisp
  (defun range (a b)
    (loop for x from a to b
          collect x))

  (defun fact (n)
    (reduce #'* (range 1 n)))

  (defun hello-world () ;; definição de função
    (format t "Fatorial de 10! é: ~a" (fact 10)))

  (hello-world) ;; chamada de função

  ;; resultado: Fatorial de 10! é: 3628800
#+END_SRC
